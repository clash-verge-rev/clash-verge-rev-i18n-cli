name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary: clash-verge-rev-cli
            extension: ""
            name: clash-verge-rev-cli-linux-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            binary: clash-verge-rev-cli
            extension: ""
            name: clash-verge-rev-cli-macos-aarch64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary: clash-verge-rev-cli.exe
            extension: .exe
            name: clash-verge-rev-cli-windows-x86_64.exe
            
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    - name: Build
      run: cargo build --release --target ${{ matrix.target }}
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.name }}
        path: target/${{ matrix.target }}/release/${{ matrix.binary }}

  release:
    if: github.event_name == 'release'
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    - name: Create release archives
      run: |
        cd artifacts
        for dir in */; do
          if [ -d "$dir" ]; then
            tar -czf "${dir%/}.tar.gz" -C "$dir" .
          fi
        done
    - name: Upload to release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/*.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}